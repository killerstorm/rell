RELEASE NOTES 0.13.0 (2023-??-??)

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
1. Library: function try_call()

Function "try_call" catches exceptions thrown by a function and returns a fallback value.

try_call(f: ()->T): T?

    Calls the function, returns the result on success, or "null" on failure.

try_call(f: ()->unit): boolean

    Same as the previous, but for functions that return unit: returns "true" on success or "false" on failure.

try_call(f: ()->T, fallback: T): T

    Calls the function, returns the result on success or the fallback value on failure. The fallback expression is
    evaluated only when the function fails.

Examples:

    val int_or_null = try_call(integer.from_hex(s, *));
    val int_or_default = try_call(integer.from_hex(s, *), -1);
    val l = try_call(list<integer>.from_gtv(my_gtv, *));

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
2. Library: function gtv.from_bytes_or_null()

gtv.from_bytes_or_null(byte_array): gtv?

    Same as gtv.from_bytes(byte_array), but returns null if the byte array is not a valid gtv, instead of throwing an
    exception.
