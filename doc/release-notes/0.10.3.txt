RELEASE NOTES 0.10.3 (2020-??-??)


1. Language: Function return type inference

Not necessary to explicitly specify function return type. If not specified, the compiler infers it:

function f(x: integer) = x * x; // returns "integer"

function g(x: integer) {
    return x * x;  // same as above
}


2. Language: Guard block

Used in operations to specify a read-only arguments verification code:

operation foo (name) {
    val u = user @ { name };
    guard {
        require(is_admin(user));
    }
    ...
}

Guard block allows to separate parameters verification from the rest of the operation's code, thus it can be executed
independently to verify arguments (not supported yet).


3. Language: Calling queries

Now it is allowed to invoke queries from code and REPL. Queries are equivalent to functions in this respect.

System queries can be called too, e. g. rell.get_app_structure().


4. Language: Short nested namespace notation

Short notation for a nested namespace:

namespace x.y.z {
    function f() = 123;
}

This is equivalent to:

namespace x {
    namespace y {
        namespace z {
            function f() = 123;
        }
    }
}


5. Language: Calling operations

Operation call uses the same syntax as function or query call, but has a completely different meaning. The call does not
execute operation's body, but returns an operation call object instead (of type "operation"):

operation foo(x: integer) {}
...
val o: operation = foo(123);

Returned value can be used to construct transactions and blocks:

val tx = rell.gtx.tx(foo(123));
val blk = rell.gtx.block(tx);


6. Library: types and functions rell.gtx.block, rell.gtx.tx

function rell.gtx.block(): rell.test.block;
function rell.gtx.block(tx: rell.test.tx): rell.test.block;
function rell.gtx.block(txs: list<rell.test.tx>): rell.test.block;

function rell.gtx.tx(): rell.test.tx;
function rell.gtx.tx(op: operation): rell.test.tx;
function rell.gtx.tx(ops: list<operation>): rell.test.tx;


7. REPL: Executing transactions and blocks

Blocks and transactions created via rell.gtx.block() and rell.gtx.tx() functions can be executed in REPL:

operation foo(x: integer) {}
...
val o: operation = foo(123);
val tx = rell.gtx.tx(o);
tx.run();

Method run() is defined for types rell.gtx.tx and rell.gtx.block: it executes all operations in all transactions of
a block, and adds the transactions and the block to the blockchain.


8. Language: Named function arguments

When calling a function, arguments can be specified by names, in arbitrary order:

function f(x: integer, y: text) {}
...
f(x = 123, y = 'Hello');
